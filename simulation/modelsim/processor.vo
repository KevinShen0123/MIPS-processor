// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Intel and sold by Intel or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 17.0.0 Build 595 04/25/2017 SJ Lite Edition"

// DATE "11/03/2022 10:44:32"

// 
// Device: Altera EP4CE115F29C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module control_signal (
	ALUinB,
	DMwe,
	Rwe,
	Rdst,
	Rwd,
	opcode);
output 	ALUinB;
output 	DMwe;
output 	Rwe;
output 	Rdst;
output 	Rwd;
input 	[4:0] opcode;

// Design Ports Information
// ALUinB	=>  Location: PIN_R4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// DMwe	=>  Location: PIN_T4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Rwe	=>  Location: PIN_R1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Rdst	=>  Location: PIN_R7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Rwd	=>  Location: PIN_R5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// opcode[0]	=>  Location: PIN_R2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// opcode[2]	=>  Location: PIN_R6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// opcode[3]	=>  Location: PIN_U4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// opcode[4]	=>  Location: PIN_U3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// opcode[1]	=>  Location: PIN_R3,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("processor_v.sdo");
// synopsys translate_on

wire \ALUinB~output_o ;
wire \DMwe~output_o ;
wire \Rwe~output_o ;
wire \Rdst~output_o ;
wire \Rwd~output_o ;
wire \opcode[2]~input_o ;
wire \opcode[4]~input_o ;
wire \opcode[0]~input_o ;
wire \opcode[1]~input_o ;
wire \comb_3|d2|and0~0_combout ;
wire \opcode[3]~input_o ;
wire \comb_3|d1|and7~0_combout ;
wire \or1~combout ;
wire \comb_3|d1|and7~1_combout ;
wire \or2~combout ;
wire \comb_3|d1|and0~0_combout ;
wire \comb_3|d2|and0~combout ;


hard_block auto_generated_inst(
	.devpor(devpor),
	.devclrn(devclrn),
	.devoe(devoe));

// Location: IOOBUF_X0_Y33_N16
cycloneive_io_obuf \ALUinB~output (
	.i(\or1~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\ALUinB~output_o ),
	.obar());
// synopsys translate_off
defparam \ALUinB~output .bus_hold = "false";
defparam \ALUinB~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y33_N23
cycloneive_io_obuf \DMwe~output (
	.i(\comb_3|d1|and7~1_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\DMwe~output_o ),
	.obar());
// synopsys translate_off
defparam \DMwe~output .bus_hold = "false";
defparam \DMwe~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y35_N9
cycloneive_io_obuf \Rwe~output (
	.i(\or2~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Rwe~output_o ),
	.obar());
// synopsys translate_off
defparam \Rwe~output .bus_hold = "false";
defparam \Rwe~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y35_N16
cycloneive_io_obuf \Rdst~output (
	.i(\comb_3|d1|and0~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Rdst~output_o ),
	.obar());
// synopsys translate_off
defparam \Rdst~output .bus_hold = "false";
defparam \Rdst~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y32_N23
cycloneive_io_obuf \Rwd~output (
	.i(\comb_3|d2|and0~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Rwd~output_o ),
	.obar());
// synopsys translate_off
defparam \Rwd~output .bus_hold = "false";
defparam \Rwd~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y34_N1
cycloneive_io_ibuf \opcode[2]~input (
	.i(opcode[2]),
	.ibar(gnd),
	.o(\opcode[2]~input_o ));
// synopsys translate_off
defparam \opcode[2]~input .bus_hold = "false";
defparam \opcode[2]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y34_N8
cycloneive_io_ibuf \opcode[4]~input (
	.i(opcode[4]),
	.ibar(gnd),
	.o(\opcode[4]~input_o ));
// synopsys translate_off
defparam \opcode[4]~input .bus_hold = "false";
defparam \opcode[4]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y35_N1
cycloneive_io_ibuf \opcode[0]~input (
	.i(opcode[0]),
	.ibar(gnd),
	.o(\opcode[0]~input_o ));
// synopsys translate_off
defparam \opcode[0]~input .bus_hold = "false";
defparam \opcode[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y34_N22
cycloneive_io_ibuf \opcode[1]~input (
	.i(opcode[1]),
	.ibar(gnd),
	.o(\opcode[1]~input_o ));
// synopsys translate_off
defparam \opcode[1]~input .bus_hold = "false";
defparam \opcode[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y34_N10
cycloneive_lcell_comb \comb_3|d2|and0~0 (
// Equation(s):
// \comb_3|d2|and0~0_combout  = (!\opcode[2]~input_o  & (!\opcode[4]~input_o  & (!\opcode[0]~input_o  & !\opcode[1]~input_o )))

	.dataa(\opcode[2]~input_o ),
	.datab(\opcode[4]~input_o ),
	.datac(\opcode[0]~input_o ),
	.datad(\opcode[1]~input_o ),
	.cin(gnd),
	.combout(\comb_3|d2|and0~0_combout ),
	.cout());
// synopsys translate_off
defparam \comb_3|d2|and0~0 .lut_mask = 16'h0001;
defparam \comb_3|d2|and0~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X0_Y34_N15
cycloneive_io_ibuf \opcode[3]~input (
	.i(opcode[3]),
	.ibar(gnd),
	.o(\opcode[3]~input_o ));
// synopsys translate_off
defparam \opcode[3]~input .bus_hold = "false";
defparam \opcode[3]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y34_N24
cycloneive_lcell_comb \comb_3|d1|and7~0 (
// Equation(s):
// \comb_3|d1|and7~0_combout  = (\opcode[2]~input_o  & (!\opcode[4]~input_o  & (\opcode[0]~input_o  & !\opcode[3]~input_o )))

	.dataa(\opcode[2]~input_o ),
	.datab(\opcode[4]~input_o ),
	.datac(\opcode[0]~input_o ),
	.datad(\opcode[3]~input_o ),
	.cin(gnd),
	.combout(\comb_3|d1|and7~0_combout ),
	.cout());
// synopsys translate_off
defparam \comb_3|d1|and7~0 .lut_mask = 16'h0020;
defparam \comb_3|d1|and7~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y34_N20
cycloneive_lcell_comb or1(
// Equation(s):
// \or1~combout  = (\comb_3|d1|and7~0_combout ) # ((\comb_3|d2|and0~0_combout  & \opcode[3]~input_o ))

	.dataa(\comb_3|d2|and0~0_combout ),
	.datab(gnd),
	.datac(\opcode[3]~input_o ),
	.datad(\comb_3|d1|and7~0_combout ),
	.cin(gnd),
	.combout(\or1~combout ),
	.cout());
// synopsys translate_off
defparam or1.lut_mask = 16'hFFA0;
defparam or1.sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y34_N30
cycloneive_lcell_comb \comb_3|d1|and7~1 (
// Equation(s):
// \comb_3|d1|and7~1_combout  = (\opcode[1]~input_o  & \comb_3|d1|and7~0_combout )

	.dataa(\opcode[1]~input_o ),
	.datab(gnd),
	.datac(gnd),
	.datad(\comb_3|d1|and7~0_combout ),
	.cin(gnd),
	.combout(\comb_3|d1|and7~1_combout ),
	.cout());
// synopsys translate_off
defparam \comb_3|d1|and7~1 .lut_mask = 16'hAA00;
defparam \comb_3|d1|and7~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y34_N0
cycloneive_lcell_comb or2(
// Equation(s):
// \or2~combout  = (\comb_3|d2|and0~0_combout ) # ((!\opcode[1]~input_o  & \comb_3|d1|and7~0_combout ))

	.dataa(\opcode[1]~input_o ),
	.datab(\comb_3|d1|and7~0_combout ),
	.datac(gnd),
	.datad(\comb_3|d2|and0~0_combout ),
	.cin(gnd),
	.combout(\or2~combout ),
	.cout());
// synopsys translate_off
defparam or2.lut_mask = 16'hFF44;
defparam or2.sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y34_N2
cycloneive_lcell_comb \comb_3|d1|and0~0 (
// Equation(s):
// \comb_3|d1|and0~0_combout  = (!\opcode[3]~input_o  & \comb_3|d2|and0~0_combout )

	.dataa(gnd),
	.datab(gnd),
	.datac(\opcode[3]~input_o ),
	.datad(\comb_3|d2|and0~0_combout ),
	.cin(gnd),
	.combout(\comb_3|d1|and0~0_combout ),
	.cout());
// synopsys translate_off
defparam \comb_3|d1|and0~0 .lut_mask = 16'h0F00;
defparam \comb_3|d1|and0~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y34_N28
cycloneive_lcell_comb \comb_3|d2|and0 (
// Equation(s):
// \comb_3|d2|and0~combout  = (\opcode[3]~input_o  & \comb_3|d2|and0~0_combout )

	.dataa(gnd),
	.datab(gnd),
	.datac(\opcode[3]~input_o ),
	.datad(\comb_3|d2|and0~0_combout ),
	.cin(gnd),
	.combout(\comb_3|d2|and0~combout ),
	.cout());
// synopsys translate_off
defparam \comb_3|d2|and0 .lut_mask = 16'hF000;
defparam \comb_3|d2|and0 .sum_lutc_input = "datac";
// synopsys translate_on

assign ALUinB = \ALUinB~output_o ;

assign DMwe = \DMwe~output_o ;

assign Rwe = \Rwe~output_o ;

assign Rdst = \Rdst~output_o ;

assign Rwd = \Rwd~output_o ;

endmodule

module hard_block (

	devpor,
	devclrn,
	devoe);

// Design Ports Information
// ~ALTERA_ASDO_DATA1~	=>  Location: PIN_F4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_FLASH_nCE_nCSO~	=>  Location: PIN_E2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DCLK~	=>  Location: PIN_P3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DATA0~	=>  Location: PIN_N7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_nCEO~	=>  Location: PIN_P28,	 I/O Standard: 2.5 V,	 Current Strength: 8mA

input 	devpor;
input 	devclrn;
input 	devoe;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

wire \~ALTERA_ASDO_DATA1~~padout ;
wire \~ALTERA_FLASH_nCE_nCSO~~padout ;
wire \~ALTERA_DATA0~~padout ;
wire \~ALTERA_ASDO_DATA1~~ibuf_o ;
wire \~ALTERA_FLASH_nCE_nCSO~~ibuf_o ;
wire \~ALTERA_DATA0~~ibuf_o ;


endmodule
